{
	"$schema": "http://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#",
	"contentVersion": "1.0.0.0",
	"parameters": {
		"factoryName": {
			"type": "string",
			"metadata": "Data Factory name",
			"defaultValue": "wic-data-factory"
		},
		"AzureSqlDatabaseLinkedService_connectionString": {
			"type": "secureString",
			"metadata": "Secure string for 'connectionString' of 'AzureSqlDatabaseLinkedService'"
		},
		"AzureStorageLinkedBlobService_connectionString": {
			"type": "secureString",
			"metadata": "Secure string for 'connectionString' of 'AzureStorageLinkedBlobService'"
		},
		"EtlSqlDbLinkedService_connectionString": {
			"type": "secureString",
			"metadata": "Secure string for 'connectionString' of 'EtlSqlDbLinkedService'"
		}
	},
	"variables": {
		"factoryId": "[concat('Microsoft.DataFactory/factories/', parameters('factoryName'))]"
	},
	"resources": [
		{
			"name": "[concat(parameters('factoryName'), '/testpipeline2')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"description": "Uses sys_change_version",
				"activities": [
					{
						"name": "Wait1",
						"type": "Wait",
						"dependsOn": [],
						"userProperties": [],
						"typeProperties": {
							"waitTimeInSeconds": 5
						}
					}
				],
				"variables": {
					"NewWatermark": {
						"type": "String",
						"defaultValue": "0"
					},
					"OldWatermark": {
						"type": "String",
						"defaultValue": "99999999999"
					},
					"TableName": {
						"type": "String",
						"defaultValue": "bixia_service_Invoices"
					}
				},
				"annotations": [],
				"lastPublishTime": "2020-11-27T11:23:48Z"
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/AzureSqlDatabaseLinkedService')]",
			"type": "Microsoft.DataFactory/factories/linkedServices",
			"apiVersion": "2018-06-01",
			"properties": {
				"annotations": [],
				"type": "AzureSqlDatabase",
				"typeProperties": {
					"connectionString": "[parameters('AzureSqlDatabaseLinkedService_connectionString')]"
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/AzureStorageLinkedBlobService')]",
			"type": "Microsoft.DataFactory/factories/linkedServices",
			"apiVersion": "2018-06-01",
			"properties": {
				"annotations": [],
				"type": "AzureBlobStorage",
				"typeProperties": {
					"connectionString": "[parameters('AzureStorageLinkedBlobService_connectionString')]"
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/EtlSqlDbLinkedService')]",
			"type": "Microsoft.DataFactory/factories/linkedServices",
			"apiVersion": "2018-06-01",
			"properties": {
				"annotations": [],
				"type": "AzureSqlDatabase",
				"typeProperties": {
					"connectionString": "[parameters('EtlSqlDbLinkedService_connectionString')]"
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/FileStuffLinkedService')]",
			"type": "Microsoft.DataFactory/factories/integrationRuntimes",
			"apiVersion": "2018-06-01",
			"properties": {
				"type": "SelfHosted",
				"typeProperties": {}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/AvroSinkDataset')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "AzureStorageLinkedBlobService",
					"type": "LinkedServiceReference"
				},
				"parameters": {
					"outputDir": {
						"type": "string",
						"defaultValue": "not-set"
					}
				},
				"annotations": [],
				"type": "Avro",
				"typeProperties": {
					"location": {
						"type": "AzureBlobStorageLocation",
						"folderPath": {
							"value": "@dataset().outputDir",
							"type": "Expression"
						},
						"container": "adftutorial"
					}
				},
				"schema": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/AzureStorageLinkedBlobService')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/CsvDataset')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "AzureStorageLinkedBlobService",
					"type": "LinkedServiceReference"
				},
				"parameters": {
					"outputDir": {
						"type": "string",
						"defaultValue": "not-set"
					}
				},
				"annotations": [],
				"type": "DelimitedText",
				"typeProperties": {
					"location": {
						"type": "AzureBlobStorageLocation",
						"folderPath": {
							"value": "@dataset().outputDir",
							"type": "Expression"
						},
						"container": "adftutorial"
					},
					"columnDelimiter": ",",
					"escapeChar": "\\",
					"firstRowAsHeader": true,
					"quoteChar": "\""
				},
				"schema": [
					{
						"type": "String"
					},
					{
						"type": "String"
					},
					{
						"type": "String"
					},
					{
						"type": "String"
					},
					{
						"type": "String"
					}
				]
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/AzureStorageLinkedBlobService')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/CsvSinkDataset')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "AzureStorageLinkedBlobService",
					"type": "LinkedServiceReference"
				},
				"parameters": {
					"outputDir": {
						"type": "string",
						"defaultValue": "not-set"
					}
				},
				"annotations": [],
				"type": "DelimitedText",
				"typeProperties": {
					"location": {
						"type": "AzureBlobStorageLocation",
						"folderPath": {
							"value": "@dataset().outputDir",
							"type": "Expression"
						},
						"container": "adftutorial"
					},
					"columnDelimiter": ",",
					"escapeChar": "\\",
					"firstRowAsHeader": true,
					"quoteChar": "\""
				},
				"schema": [
					{
						"type": "String"
					},
					{
						"type": "String"
					},
					{
						"type": "String"
					},
					{
						"type": "String"
					},
					{
						"type": "String"
					}
				]
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/AzureStorageLinkedBlobService')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/EtlSqlDbDataset')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "EtlSqlDbLinkedService",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "AzureSqlTable",
				"schema": [
					{
						"name": "CustomerID",
						"type": "int",
						"precision": 10
					},
					{
						"name": "InvoiceID",
						"type": "int",
						"precision": 10
					},
					{
						"name": "DueDate",
						"type": "datetime",
						"precision": 23,
						"scale": 3
					},
					{
						"name": "InvoiceNumber",
						"type": "nvarchar"
					},
					{
						"name": "TotalAmount",
						"type": "decimal",
						"precision": 19,
						"scale": 6
					},
					{
						"name": "BillLocationID",
						"type": "int",
						"precision": 10
					},
					{
						"name": "SiteID",
						"type": "int",
						"precision": 10
					},
					{
						"name": "BillingName",
						"type": "nvarchar"
					},
					{
						"name": "BillingAddress",
						"type": "nvarchar"
					},
					{
						"name": "InvoiceProductID",
						"type": "int",
						"precision": 10
					},
					{
						"name": "ProductName",
						"type": "nvarchar"
					},
					{
						"name": "InvoiceSysChangeVersion",
						"type": "int",
						"precision": 10
					},
					{
						"name": "InvoiceSysChangeOperation",
						"type": "nchar"
					}
				],
				"typeProperties": {}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/EtlSqlDbLinkedService')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/JsonSinkDataset')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "AzureStorageLinkedBlobService",
					"type": "LinkedServiceReference"
				},
				"parameters": {
					"outputDir": {
						"type": "string",
						"defaultValue": "not-set"
					}
				},
				"annotations": [],
				"type": "Json",
				"typeProperties": {
					"location": {
						"type": "AzureBlobStorageLocation",
						"folderPath": {
							"value": "@dataset().outputDir",
							"type": "Expression"
						},
						"container": "adftutorial"
					}
				},
				"schema": {}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/AzureStorageLinkedBlobService')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/WatermarkDataset')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "AzureSqlDatabaseLinkedService",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "AzureSqlTable",
				"schema": [],
				"typeProperties": {
					"schema": "dbo",
					"table": "watermarktable"
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/AzureSqlDatabaseLinkedService')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/trigger1')]",
			"type": "Microsoft.DataFactory/factories/triggers",
			"apiVersion": "2018-06-01",
			"properties": {
				"annotations": [],
				"runtimeState": "Started",
				"pipelines": [
					{
						"pipelineReference": {
							"referenceName": "testpipeline2",
							"type": "PipelineReference"
						},
						"parameters": {}
					}
				],
				"type": "ScheduleTrigger",
				"typeProperties": {
					"recurrence": {
						"frequency": "Minute",
						"interval": 2,
						"startTime": "2020-11-27T16:04:00Z",
						"timeZone": "UTC"
					}
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/pipelines/testpipeline2')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/DeltaChangeVersionPipeline_avro')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"description": "Uses sys_change_version",
				"activities": [
					{
						"name": "LookupOldWaterMarkActivity",
						"type": "Lookup",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "AzureSqlSource",
								"sqlReaderQuery": {
									"value": "SELECT change_version FROM watermarktable WHERE TableName = '@{variables('TableName')}'",
									"type": "Expression"
								},
								"queryTimeout": "02:00:00",
								"partitionOption": "None"
							},
							"dataset": {
								"referenceName": "WatermarkDataset",
								"type": "DatasetReference",
								"parameters": {}
							}
						}
					},
					{
						"name": "LookupNewWaterMarkActivity",
						"type": "Lookup",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "AzureSqlSource",
								"sqlReaderQuery": {
									"value": "SELECT MAX(InvoiceSysChangeVersion) AS NewChangeVersion FROM @{variables('TableName')}",
									"type": "Expression"
								},
								"queryTimeout": "02:00:00",
								"partitionOption": "None"
							},
							"dataset": {
								"referenceName": "EtlSqlDbDataset",
								"type": "DatasetReference",
								"parameters": {}
							}
						}
					},
					{
						"name": "Set var new watermark",
						"type": "SetVariable",
						"dependsOn": [
							{
								"activity": "LookupNewWaterMarkActivity",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"variableName": "NewWatermark",
							"value": {
								"value": "@{activity('LookupNewWaterMarkActivity').output.firstRow.NewChangeVersion}",
								"type": "Expression"
							}
						}
					},
					{
						"name": "Set var old watermark",
						"type": "SetVariable",
						"dependsOn": [
							{
								"activity": "LookupOldWaterMarkActivity",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"variableName": "OldWatermark",
							"value": {
								"value": "@{activity('LookupOldWaterMarkActivity').output.firstRow.change_version}",
								"type": "Expression"
							}
						}
					},
					{
						"name": "If watermark is sane",
						"type": "IfCondition",
						"dependsOn": [
							{
								"activity": "Set var new watermark",
								"dependencyConditions": [
									"Succeeded"
								]
							},
							{
								"activity": "Set var old watermark",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"expression": {
								"value": "@greater(int(variables('NewWatermark')), int(variables('OldWatermark')))",
								"type": "Expression"
							},
							"ifFalseActivities": [
								{
									"name": "Wait1_FALSE",
									"type": "Wait",
									"dependsOn": [],
									"userProperties": [],
									"typeProperties": {
										"waitTimeInSeconds": 1
									}
								}
							],
							"ifTrueActivities": [
								{
									"name": "From SQL to Blob",
									"type": "Copy",
									"dependsOn": [],
									"policy": {
										"timeout": "7.00:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"source": {
											"type": "AzureSqlSource",
											"sqlReaderQuery": {
												"value": "SELECT * from @{variables('TableName')} WHERE InvoiceSysChangeVersion > '@{variables('OldWatermark')}' AND InvoiceSysChangeVersion <= '@{variables('NewWatermark')}'",
												"type": "Expression"
											},
											"queryTimeout": "02:00:00",
											"partitionOption": "None"
										},
										"sink": {
											"type": "AvroSink",
											"storeSettings": {
												"type": "AzureBlobStorageWriteSettings"
											},
											"formatSettings": {
												"type": "AvroWriteSettings"
											}
										},
										"enableStaging": false,
										"translator": {
											"type": "TabularTranslator",
											"typeConversion": true,
											"typeConversionSettings": {
												"allowDataTruncation": true,
												"treatBooleanAsNumber": false
											}
										}
									},
									"inputs": [
										{
											"referenceName": "EtlSqlDbDataset",
											"type": "DatasetReference",
											"parameters": {}
										}
									],
									"outputs": [
										{
											"referenceName": "AvroSinkDataset",
											"type": "DatasetReference",
											"parameters": {
												"outputDir": {
													"value": "@variables('TableName')",
													"type": "Expression"
												}
											}
										}
									]
								},
								{
									"name": "Write watermark",
									"type": "SqlServerStoredProcedure",
									"dependsOn": [
										{
											"activity": "From SQL to Blob",
											"dependencyConditions": [
												"Succeeded"
											]
										}
									],
									"policy": {
										"timeout": "7.00:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"storedProcedureName": "[[dbo].[usp_write_changeversion]",
										"storedProcedureParameters": {
											"TableName": {
												"value": {
													"value": "@variables('TableName')",
													"type": "Expression"
												},
												"type": "String"
											},
											"version": {
												"value": {
													"value": "@variables('NewWatermark')",
													"type": "Expression"
												},
												"type": "Int32"
											}
										}
									},
									"linkedServiceName": {
										"referenceName": "AzureSqlDatabaseLinkedService",
										"type": "LinkedServiceReference"
									}
								}
							]
						}
					}
				],
				"variables": {
					"NewWatermark": {
						"type": "String",
						"defaultValue": "0"
					},
					"OldWatermark": {
						"type": "String",
						"defaultValue": "99999999999"
					},
					"TableName": {
						"type": "String",
						"defaultValue": "bixia_service_Invoices"
					}
				},
				"annotations": [],
				"lastPublishTime": "2020-11-27T11:43:53Z"
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/WatermarkDataset')]",
				"[concat(variables('factoryId'), '/datasets/EtlSqlDbDataset')]",
				"[concat(variables('factoryId'), '/datasets/AvroSinkDataset')]",
				"[concat(variables('factoryId'), '/linkedServices/AzureSqlDatabaseLinkedService')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/DeltaChangeVersionPipeline_csv')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"description": "Uses sys_change_version",
				"activities": [
					{
						"name": "LookupOldWaterMarkActivity",
						"type": "Lookup",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "AzureSqlSource",
								"sqlReaderQuery": {
									"value": "SELECT change_version FROM watermarktable WHERE TableName = '@{variables('TableName')}'",
									"type": "Expression"
								},
								"queryTimeout": "02:00:00",
								"partitionOption": "None"
							},
							"dataset": {
								"referenceName": "WatermarkDataset",
								"type": "DatasetReference",
								"parameters": {}
							}
						}
					},
					{
						"name": "LookupNewWaterMarkActivity",
						"type": "Lookup",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "AzureSqlSource",
								"sqlReaderQuery": {
									"value": "SELECT MAX(InvoiceSysChangeVersion) AS NewChangeVersion FROM @{variables('TableName')}",
									"type": "Expression"
								},
								"queryTimeout": "02:00:00",
								"partitionOption": "None"
							},
							"dataset": {
								"referenceName": "EtlSqlDbDataset",
								"type": "DatasetReference",
								"parameters": {}
							}
						}
					},
					{
						"name": "Set var new watermark",
						"type": "SetVariable",
						"dependsOn": [
							{
								"activity": "LookupNewWaterMarkActivity",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"variableName": "NewWatermark",
							"value": {
								"value": "@{activity('LookupNewWaterMarkActivity').output.firstRow.NewChangeVersion}",
								"type": "Expression"
							}
						}
					},
					{
						"name": "Set var old watermark",
						"type": "SetVariable",
						"dependsOn": [
							{
								"activity": "LookupOldWaterMarkActivity",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"variableName": "OldWatermark",
							"value": {
								"value": "@{activity('LookupOldWaterMarkActivity').output.firstRow.change_version}",
								"type": "Expression"
							}
						}
					},
					{
						"name": "If watermark is sane",
						"type": "IfCondition",
						"dependsOn": [
							{
								"activity": "Set var new watermark",
								"dependencyConditions": [
									"Succeeded"
								]
							},
							{
								"activity": "Set var old watermark",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"expression": {
								"value": "@greater(int(variables('NewWatermark')), int(variables('OldWatermark')))",
								"type": "Expression"
							},
							"ifFalseActivities": [
								{
									"name": "Wait1_FALSE",
									"type": "Wait",
									"dependsOn": [],
									"userProperties": [],
									"typeProperties": {
										"waitTimeInSeconds": 1
									}
								}
							],
							"ifTrueActivities": [
								{
									"name": "From SQL to Blob",
									"type": "Copy",
									"dependsOn": [],
									"policy": {
										"timeout": "7.00:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"source": {
											"type": "AzureSqlSource",
											"sqlReaderQuery": {
												"value": "SELECT * from @{variables('TableName')} WHERE InvoiceSysChangeVersion > '@{variables('OldWatermark')}' AND InvoiceSysChangeVersion <= '@{variables('NewWatermark')}'",
												"type": "Expression"
											},
											"queryTimeout": "02:00:00",
											"partitionOption": "None"
										},
										"sink": {
											"type": "DelimitedTextSink",
											"storeSettings": {
												"type": "AzureBlobStorageWriteSettings"
											},
											"formatSettings": {
												"type": "DelimitedTextWriteSettings",
												"maxRowsPerFile": 2,
												"fileNamePrefix": {
													"value": "@concat(variables('OldWatermark'), '-', variables('NewWatermark'), '-', pipeline().RunId)",
													"type": "Expression"
												},
												"quoteAllText": true,
												"fileExtension": ".txt"
											}
										},
										"enableStaging": false,
										"translator": {
											"type": "TabularTranslator",
											"typeConversion": true,
											"typeConversionSettings": {
												"allowDataTruncation": true,
												"treatBooleanAsNumber": false
											}
										}
									},
									"inputs": [
										{
											"referenceName": "EtlSqlDbDataset",
											"type": "DatasetReference",
											"parameters": {}
										}
									],
									"outputs": [
										{
											"referenceName": "CsvDataset",
											"type": "DatasetReference",
											"parameters": {
												"outputDir": {
													"value": "@variables('TableName')",
													"type": "Expression"
												}
											}
										}
									]
								},
								{
									"name": "Write watermark",
									"type": "SqlServerStoredProcedure",
									"dependsOn": [
										{
											"activity": "From SQL to Blob",
											"dependencyConditions": [
												"Succeeded"
											]
										}
									],
									"policy": {
										"timeout": "7.00:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"storedProcedureName": "[[dbo].[usp_write_changeversion]",
										"storedProcedureParameters": {
											"TableName": {
												"value": {
													"value": "@variables('TableName')",
													"type": "Expression"
												},
												"type": "String"
											},
											"version": {
												"value": {
													"value": "@variables('NewWatermark')",
													"type": "Expression"
												},
												"type": "Int32"
											}
										}
									},
									"linkedServiceName": {
										"referenceName": "AzureSqlDatabaseLinkedService",
										"type": "LinkedServiceReference"
									}
								}
							]
						}
					}
				],
				"variables": {
					"NewWatermark": {
						"type": "String",
						"defaultValue": "0"
					},
					"OldWatermark": {
						"type": "String",
						"defaultValue": "99999999999"
					},
					"TableName": {
						"type": "String",
						"defaultValue": "bixia_service_Invoices"
					}
				},
				"annotations": [],
				"lastPublishTime": "2020-11-27T11:23:48Z"
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/WatermarkDataset')]",
				"[concat(variables('factoryId'), '/datasets/EtlSqlDbDataset')]",
				"[concat(variables('factoryId'), '/datasets/CsvDataset')]",
				"[concat(variables('factoryId'), '/linkedServices/AzureSqlDatabaseLinkedService')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/DeltaChangeVersionPipeline_json')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"description": "Uses sys_change_version",
				"activities": [
					{
						"name": "LookupOldWaterMarkActivity",
						"type": "Lookup",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "AzureSqlSource",
								"sqlReaderQuery": {
									"value": "SELECT change_version FROM watermarktable WHERE TableName = '@{variables('TableName')}'",
									"type": "Expression"
								},
								"queryTimeout": "02:00:00",
								"partitionOption": "None"
							},
							"dataset": {
								"referenceName": "WatermarkDataset",
								"type": "DatasetReference",
								"parameters": {}
							},
							"firstRowOnly": true
						}
					},
					{
						"name": "LookupNewWaterMarkActivity",
						"type": "Lookup",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "AzureSqlSource",
								"sqlReaderQuery": {
									"value": "SELECT MAX(InvoiceSysChangeVersion) AS NewChangeVersion FROM @{variables('TableName')}",
									"type": "Expression"
								},
								"queryTimeout": "02:00:00",
								"partitionOption": "None"
							},
							"dataset": {
								"referenceName": "EtlSqlDbDataset",
								"type": "DatasetReference",
								"parameters": {}
							}
						}
					},
					{
						"name": "Set var new watermark",
						"type": "SetVariable",
						"dependsOn": [
							{
								"activity": "LookupNewWaterMarkActivity",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"variableName": "NewWatermark",
							"value": {
								"value": "@{activity('LookupNewWaterMarkActivity').output.firstRow.NewChangeVersion}",
								"type": "Expression"
							}
						}
					},
					{
						"name": "Set var old watermark",
						"type": "SetVariable",
						"dependsOn": [
							{
								"activity": "LookupOldWaterMarkActivity",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"variableName": "OldWatermark",
							"value": {
								"value": "@{activity('LookupOldWaterMarkActivity').output.firstRow.change_version}",
								"type": "Expression"
							}
						}
					},
					{
						"name": "If watermark is sane",
						"type": "IfCondition",
						"dependsOn": [
							{
								"activity": "Set var new watermark",
								"dependencyConditions": [
									"Succeeded"
								]
							},
							{
								"activity": "Set var old watermark",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"expression": {
								"value": "@greater(int(variables('NewWatermark')), int(variables('OldWatermark')))",
								"type": "Expression"
							},
							"ifFalseActivities": [
								{
									"name": "Wait1_FALSE",
									"type": "Wait",
									"dependsOn": [],
									"userProperties": [],
									"typeProperties": {
										"waitTimeInSeconds": 1
									}
								}
							],
							"ifTrueActivities": [
								{
									"name": "From SQL to Blob",
									"type": "Copy",
									"dependsOn": [],
									"policy": {
										"timeout": "7.00:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"source": {
											"type": "AzureSqlSource",
											"sqlReaderQuery": {
												"value": "SELECT * from @{variables('TableName')} WHERE InvoiceSysChangeVersion > '@{variables('OldWatermark')}' AND InvoiceSysChangeVersion <= '@{variables('NewWatermark')}'",
												"type": "Expression"
											},
											"queryTimeout": "02:00:00",
											"partitionOption": "None"
										},
										"sink": {
											"type": "JsonSink",
											"storeSettings": {
												"type": "AzureBlobStorageWriteSettings"
											},
											"formatSettings": {
												"type": "JsonWriteSettings"
											}
										},
										"enableStaging": false
									},
									"inputs": [
										{
											"referenceName": "EtlSqlDbDataset",
											"type": "DatasetReference",
											"parameters": {}
										}
									],
									"outputs": [
										{
											"referenceName": "JsonSinkDataset",
											"type": "DatasetReference",
											"parameters": {
												"outputDir": {
													"value": "@variables('TableName')",
													"type": "Expression"
												}
											}
										}
									]
								},
								{
									"name": "Write watermark",
									"type": "SqlServerStoredProcedure",
									"dependsOn": [
										{
											"activity": "From SQL to Blob",
											"dependencyConditions": [
												"Succeeded"
											]
										}
									],
									"policy": {
										"timeout": "7.00:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"storedProcedureName": "[[dbo].[usp_write_changeversion]",
										"storedProcedureParameters": {
											"TableName": {
												"value": {
													"value": "@variables('TableName')",
													"type": "Expression"
												},
												"type": "String"
											},
											"version": {
												"value": {
													"value": "@variables('NewWatermark')",
													"type": "Expression"
												},
												"type": "Int32"
											}
										}
									},
									"linkedServiceName": {
										"referenceName": "AzureSqlDatabaseLinkedService",
										"type": "LinkedServiceReference"
									}
								}
							]
						}
					}
				],
				"variables": {
					"NewWatermark": {
						"type": "String",
						"defaultValue": "0"
					},
					"OldWatermark": {
						"type": "String",
						"defaultValue": "99999999999"
					},
					"TableName": {
						"type": "String",
						"defaultValue": "bixia_service_Invoices"
					}
				},
				"annotations": [],
				"lastPublishTime": "2020-11-27T11:21:40Z"
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/WatermarkDataset')]",
				"[concat(variables('factoryId'), '/datasets/EtlSqlDbDataset')]",
				"[concat(variables('factoryId'), '/datasets/JsonSinkDataset')]",
				"[concat(variables('factoryId'), '/linkedServices/AzureSqlDatabaseLinkedService')]"
			]
		}
	]
}